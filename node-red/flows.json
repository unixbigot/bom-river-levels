[
    {
        "id": "af66d0816af75e1b",
        "type": "tab",
        "label": "modbus",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "9fd979d281e6298d",
        "type": "tab",
        "label": "Fernvale",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "c129b430.c7968",
        "type": "tab",
        "label": "BNE Flood 2022",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a0d7fd3d.3ff608",
        "type": "tab",
        "label": "oozor",
        "disabled": true,
        "info": ""
    },
    {
        "id": "7646852d.9dfc04",
        "type": "tab",
        "label": "geoq",
        "disabled": true,
        "info": ""
    },
    {
        "id": "38f33b52.8436a4",
        "type": "tab",
        "label": "Accelerando Twitter Bot",
        "disabled": true,
        "info": ""
    },
    {
        "id": "86ec6dae.ef8b88",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": ""
    },
    {
        "id": "f64f2bc0a08264f2",
        "type": "tab",
        "label": "Cobber",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "57ed384c.436b8",
        "type": "mqtt-broker",
        "name": "Local broker",
        "broker": "broker",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "9ae96e55.d824c8",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Accelerando IoTlab",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "dd4f3801.f77d3",
        "type": "ui_tab",
        "name": "GEOQ testbench",
        "icon": "dashboard",
        "disabled": true,
        "hidden": false
    },
    {
        "id": "905ccc9.70da6b",
        "type": "ui_group",
        "name": "Events",
        "tab": "dd4f3801.f77d3",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "a36f6912.ddcd88",
        "type": "ui_tab",
        "name": "Oozor",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5a504658.96b09",
        "type": "ui_group",
        "name": "Status",
        "tab": "a36f6912.ddcd88",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "9186c6e2.b2d59",
        "type": "ui_group",
        "name": "History",
        "tab": "a36f6912.ddcd88",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "1187b40c.0e4a54",
        "type": "mqtt-broker",
        "name": "Local broker",
        "broker": "iotlab.accelerando.io",
        "port": "1883",
        "clientid": "iotlab",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": ""
    },
    {
        "id": "c78be1d3.6b90c8",
        "type": "ftp",
        "host": "ftp.bom.gov.au",
        "port": "",
        "secureOptions": "",
        "user": "",
        "connTimeout": "",
        "pasvTimeout": "",
        "keepalive": ""
    },
    {
        "id": "2de7b7b7.42f87",
        "type": "ui_tab",
        "name": "BNE flood(s) 2022 :-/",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9137735d.313728",
        "type": "ui_group",
        "name": "Levels",
        "tab": "2de7b7b7.42f87",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "3be92f24.4ffb68",
        "type": "ui_group",
        "name": "Links to Charts",
        "tab": "2de7b7b7.42f87",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "58fc5d9.2ea9c24",
        "type": "ui_group",
        "name": "Summary",
        "tab": "2de7b7b7.42f87",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "157e40103e8e96e1",
        "type": "ui_tab",
        "name": "Fernvale",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4848673a208e84b1",
        "type": "ui_group",
        "name": "Voltage Measurement",
        "tab": "157e40103e8e96e1",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "74d37bc709b1c0ec",
        "type": "ui_group",
        "name": "Current Measurement",
        "tab": "157e40103e8e96e1",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dae87669b2600c65",
        "type": "ui_group",
        "name": "Meter status",
        "tab": "157e40103e8e96e1",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "901697bc378ff6ce",
        "type": "ui_group",
        "name": "Log",
        "tab": "157e40103e8e96e1",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "7ff6eacd5a989f48",
        "type": "modbus-client",
        "d": true,
        "name": "usb dongle",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "115200",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "3dac523a102f4dd3",
        "type": "ui_tab",
        "name": "Cobber",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "48201936fcc78803",
        "type": "ui_group",
        "name": "CO₂",
        "tab": "3dac523a102f4dd3",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1eda45e1f9861472",
        "type": "ui_group",
        "name": "General",
        "tab": "3dac523a102f4dd3",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8265f7026df6e8d4",
        "type": "modbus-flex-getter",
        "z": "af66d0816af75e1b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "7ff6eacd5a989f48",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "29492323304bc82d"
            ],
            []
        ]
    },
    {
        "id": "9dc4cea48b118197",
        "type": "inject",
        "z": "af66d0816af75e1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "{     \"unitid\": 11,     \"fc\": 4,     \"address\": 0,     \"quantity\": 5 }",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "8265f7026df6e8d4"
            ]
        ]
    },
    {
        "id": "29492323304bc82d",
        "type": "debug",
        "z": "af66d0816af75e1b",
        "name": "modbus read result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "820779df6aa9a50b",
        "type": "mqtt in",
        "z": "9fd979d281e6298d",
        "name": "",
        "topic": "fernvale/+/status/+",
        "qos": "0",
        "datatype": "utf8",
        "broker": "57ed384c.436b8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 120,
        "wires": [
            [
                "232cd51f2f8dc1e0",
                "ed6e6df7d0002436"
            ]
        ]
    },
    {
        "id": "72334f7a027cb13d",
        "type": "switch",
        "z": "9fd979d281e6298d",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "status/millivolts",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "status/milliamps",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "status/battery",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 550,
        "y": 120,
        "wires": [
            [
                "185b6f7ee93ad5fd",
                "0ea57439e0d23dc9"
            ],
            [
                "871cb8e30471f623",
                "3537b47ac4a71305"
            ],
            [
                "b44d67894577561a",
                "ea73ecf7bd726ca0"
            ]
        ]
    },
    {
        "id": "232cd51f2f8dc1e0",
        "type": "change",
        "z": "9fd979d281e6298d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device",
                "pt": "msg",
                "to": "$split(topic,\"/\",2)[1]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "frag",
                "pt": "msg",
                "to": "$split(topic,\"/\",3)[2]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 120,
        "wires": [
            [
                "72334f7a027cb13d",
                "e6aee5dab05905b4"
            ]
        ]
    },
    {
        "id": "185b6f7ee93ad5fd",
        "type": "ui_gauge",
        "z": "9fd979d281e6298d",
        "name": "",
        "group": "4848673a208e84b1",
        "order": 0,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "millivolts",
        "label": "mV",
        "format": "{{value}}",
        "min": "3200",
        "max": "4200",
        "colors": [
            "#e01b24",
            "#e6e600",
            "#33d17a"
        ],
        "seg1": "3000",
        "seg2": "3700",
        "className": "",
        "x": 760,
        "y": 100,
        "wires": []
    },
    {
        "id": "0ea57439e0d23dc9",
        "type": "ui_chart",
        "z": "9fd979d281e6298d",
        "name": "",
        "group": "4848673a208e84b1",
        "order": 5,
        "width": "6",
        "height": "4",
        "label": "DUT millivolts",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "3200",
        "ymax": "4200",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 780,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "871cb8e30471f623",
        "type": "ui_gauge",
        "z": "9fd979d281e6298d",
        "name": "",
        "group": "74d37bc709b1c0ec",
        "order": 2,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "milliamps",
        "label": "mA",
        "format": "{{value}}",
        "min": "-500",
        "max": "500",
        "colors": [
            "#33d17a",
            "#e6e600",
            "#e01b24"
        ],
        "seg1": "50",
        "seg2": "150",
        "className": "",
        "x": 760,
        "y": 220,
        "wires": []
    },
    {
        "id": "3537b47ac4a71305",
        "type": "ui_chart",
        "z": "9fd979d281e6298d",
        "name": "",
        "group": "74d37bc709b1c0ec",
        "order": 1,
        "width": "6",
        "height": "4",
        "label": "DUT milliamps",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 780,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "e6aee5dab05905b4",
        "type": "debug",
        "z": "9fd979d281e6298d",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 60,
        "wires": []
    },
    {
        "id": "b44d67894577561a",
        "type": "ui_chart",
        "z": "9fd979d281e6298d",
        "name": "",
        "group": "dae87669b2600c65",
        "order": 3,
        "width": "6",
        "height": "4",
        "label": "Battery level (mV)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "3200",
        "ymax": "4100",
        "removeOlder": "72",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 790,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "ed6e6df7d0002436",
        "type": "function",
        "z": "9fd979d281e6298d",
        "name": "accumulate log",
        "func": "const log = global.get('log')||[]\nif (log.length==0) global.set('log', log)\n\nlog.unshift(`${msg.topic} ${msg.payload}`)\nwhile (log.length>1000) log.pop()\n\nmsg.payload=log.join(\"\\n\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 400,
        "wires": [
            [
                "bbe1a68ad44faf4b"
            ]
        ]
    },
    {
        "id": "bbe1a68ad44faf4b",
        "type": "ui_template",
        "z": "9fd979d281e6298d",
        "group": "901697bc378ff6ce",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<pre>{{msg.payload}}</pre>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "1d0985a79e255f9f",
        "type": "catch",
        "z": "9fd979d281e6298d",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 140,
        "y": 20,
        "wires": [
            [
                "53e29dfbf28bea0f"
            ]
        ]
    },
    {
        "id": "53e29dfbf28bea0f",
        "type": "debug",
        "z": "9fd979d281e6298d",
        "name": "fernvale error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 20,
        "wires": []
    },
    {
        "id": "ea73ecf7bd726ca0",
        "type": "ui_gauge",
        "z": "9fd979d281e6298d",
        "name": "",
        "group": "dae87669b2600c65",
        "order": 0,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "Fernvale Battery",
        "label": "mV",
        "format": "{{value}}",
        "min": "3200",
        "max": "4200",
        "colors": [
            "#e01b24",
            "#e6e600",
            "#33d17a"
        ],
        "seg1": "3000",
        "seg2": "3700",
        "className": "",
        "x": 780,
        "y": 380,
        "wires": []
    },
    {
        "id": "989ab9f6.67df38",
        "type": "ftp in",
        "z": "c129b430.c7968",
        "ftp": "c78be1d3.6b90c8",
        "operation": "get",
        "filename": "/anon/gen/fwo/IDQ60286.html",
        "localFilename": "/data/static/IDQ60286.html",
        "name": "Get River levels from BoM FTP",
        "x": 370,
        "y": 160,
        "wires": [
            [
                "d04c6055.4f7c28"
            ]
        ]
    },
    {
        "id": "21a93e50.23bc8a",
        "type": "inject",
        "z": "c129b430.c7968",
        "name": "Every 5 Mins",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "989ab9f6.67df38"
            ]
        ]
    },
    {
        "id": "4fe7efc0.89df7",
        "type": "file in",
        "z": "c129b430.c7968",
        "name": "Read saved file",
        "filename": "/data/static/IDQ60286.html",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 320,
        "y": 260,
        "wires": [
            [
                "388691c7.12cfae",
                "7465723d.10a4bc"
            ]
        ]
    },
    {
        "id": "5223b61a.3e5718",
        "type": "split",
        "z": "c129b430.c7968",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1270,
        "y": 80,
        "wires": [
            [
                "19dfefe8.3df0c8"
            ]
        ]
    },
    {
        "id": "19dfefe8.3df0c8",
        "type": "switch",
        "z": "c129b430.c7968",
        "name": "Brisbane River metadata",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "<!-- METADATA,.*Brisbane",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1470,
        "y": 80,
        "wires": [
            [
                "d99193a3.870468"
            ]
        ]
    },
    {
        "id": "47afcfdf.443c4",
        "type": "debug",
        "z": "c129b430.c7968",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 120,
        "wires": []
    },
    {
        "id": "d99193a3.870468",
        "type": "function",
        "z": "c129b430.c7968",
        "name": "Strip html",
        "func": "msg.payload = msg.payload.replace(/.*METADATA,/,'').replace(/ *-->/,'');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 120,
        "wires": [
            [
                "47afcfdf.443c4"
            ]
        ]
    },
    {
        "id": "bfb05930.6521f",
        "type": "catch",
        "z": "c129b430.c7968",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 640,
        "y": 40,
        "wires": [
            [
                "b3a1decc.8fc8e8"
            ]
        ]
    },
    {
        "id": "b3a1decc.8fc8e8",
        "type": "debug",
        "z": "c129b430.c7968",
        "name": "Log Caught Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 40,
        "wires": []
    },
    {
        "id": "388691c7.12cfae",
        "type": "function",
        "z": "c129b430.c7968",
        "name": "Parse HTML with regex, oh the horrors",
        "func": "let lines = msg.payload.split('\\n');\n//node.warn(`Split input into ${lines.length} lines`)\nlet i = 0;\nlet count = lines.length;\nlet line = lines[0];\nlet output=[];\nlet stations = global.get('stations')||{}\nlet force = msg.force;\n\nfunction next() {\n    i = i+1;\n    line = lines[i].replace(/ *<\\/?td> */g,'');\n    return line;\n}\n\nwhile (i < (count-1)) {\n\n    //node.warn('Consider line'+line)\n    //if (true) break;\n    if (!line.match(/METADATA.*(Breakfast|Brisbane|Bremer|Moggill|Oxley) (R|Ck) at /)) {\n        next();\n        continue;\n    }\n    line = line.replace(/^ *<!-- *METADATA,/,'').replace(/ *--> *$/,'');\n    //node.warn(`Found brisbane station [${line}]`);\n    let meta = line.split(/,/);\n    let payload = {\n        station: meta[10].replace(/ *#$/,''),\n        condition: meta[8],\n        metadata: meta,\n        url: `http://www.bom.gov.au/fwo/${meta[7]}/${meta[7]}.${meta[0]}.plt.shtml`\n    }\n\n//    line = unshift(lines).replace(/ *<\\/?td> */g,'');\n//    node.warn(`Parsing line [${line}]`);\n    payload.name=next().replace(/ *#$/,'');\n    payload.time=next();\n    payload.level=next();\n    payload.trend=next();\n    //node.warn(`Station payload ${JSON.stringify(payload)}`)\n\n    if (!force && stations[payload.station] && stations[payload.station].time==payload.time) {\n        // no change\n        next();\n        continue;\n    }\n    let topic = payload.name.replace(/Brisbane R at /,'');\n\n    node.send({topic, payload});\n    //output.push({...payload});\n    \n    stations[payload.name]={...payload};\n\n    next();   \n}\nglobal.set('stations',stations)\nreturn(null);\n//node.warn(`output: ${JSON.stringify(output,null,'    ')}`)\n//return output;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 260,
        "wires": [
            [
                "56d8d74a.757f98",
                "b7867efe.29ccc8",
                "e2901e01.9e733",
                "c1ed1abc.757788",
                "69f9f70d.205c18",
                "ce0652a82873b683"
            ]
        ]
    },
    {
        "id": "bd593656.031108",
        "type": "inject",
        "z": "c129b430.c7968",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 650,
        "y": 80,
        "wires": [
            [
                "898e4c03.4017"
            ]
        ]
    },
    {
        "id": "898e4c03.4017",
        "type": "change",
        "z": "c129b430.c7968",
        "name": "Erase station records",
        "rules": [
            {
                "t": "set",
                "p": "stations",
                "pt": "global",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "2f46596f.0cc7ee",
        "type": "ui_list",
        "z": "c129b430.c7968",
        "group": "9137735d.313728",
        "name": "List Brisbane river flood stations",
        "order": 5,
        "width": "8",
        "height": "15",
        "lineType": "two",
        "actionType": "none",
        "allowHTML": false,
        "outputs": 0,
        "topic": "",
        "x": 970,
        "y": 520,
        "wires": []
    },
    {
        "id": "56d8d74a.757f98",
        "type": "delay",
        "z": "c129b430.c7968",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 320,
        "y": 520,
        "wires": [
            [
                "864d50b9.c9878",
                "fdbd7a13.6e82e"
            ]
        ]
    },
    {
        "id": "864d50b9.c9878",
        "type": "function",
        "z": "c129b430.c7968",
        "name": "Update list of key Levels",
        "func": "const stations = global.get('stations')||{};\nconst normal_levels = global.get('normal_levels')||{};\n\nconst all_stations = Object.values(stations)\n.filter(s=>!s.name.match(/Gregor|Devon/))\n.sort((a,b)=>(Number(a.level)>Number(b.level))?-1:((Number(a.level)<Number(b.level))?1:0));\n\nmsg.payload = all_stations.map(station=>{\n    let trend = station.trend;\n    if (normal_levels[station.name]) {\n        const diff = station.level - normal_levels[station.name];\n        if (diff > 0.2) {\n            const above = `${Number(diff).toFixed(1)}m above normal`\n            trend = `${trend}, ${above}`;\n        } else if (diff < -0.2) {\n            const below = `${Number(-diff).toFixed(1)}m below normal`\n            trend = `${trend}, ${below}`;\n        }\n    }\n    let item = {\n        title:station.name,\n        description:`${station.level}m (${trend}) at ${station.time}`,\n    };\n    if (station.trend == 'rising') item.icon_unicode='📈';\n    else if (station.trend == 'falling') item.icon_unicode='📉';\n    else if (station.trend == 'steady') item.icon_unicode='😬';\n    else item.icon_unicode = '🤷‍♂️';\n    return {...item};    \n});\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 520,
        "wires": [
            [
                "2f46596f.0cc7ee"
            ]
        ]
    },
    {
        "id": "d04c6055.4f7c28",
        "type": "delay",
        "z": "c129b430.c7968",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 640,
        "y": 160,
        "wires": [
            [
                "4fe7efc0.89df7"
            ]
        ]
    },
    {
        "id": "66d97d1f.e4f714",
        "type": "inject",
        "z": "c129b430.c7968",
        "name": "Manual refresh",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 580,
        "wires": [
            [
                "fdbd7a13.6e82e",
                "864d50b9.c9878"
            ]
        ]
    },
    {
        "id": "bc7fea83.ffc808",
        "type": "ui_template",
        "z": "c129b430.c7968",
        "group": "3be92f24.4ffb68",
        "name": "List of Links",
        "order": 0,
        "width": "8",
        "height": "15",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 910,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "fdbd7a13.6e82e",
        "type": "function",
        "z": "c129b430.c7968",
        "name": "List of links to BoM charts",
        "func": "const stations = global.get('stations')||{};\n\nconst all_stations = Object.values(stations)\n.filter(s=>!s.name.match(/Gregor|Devon/))\n.sort((a,b)=>(Number(a.level)>Number(b.level))?-1:((Number(a.level)<Number(b.level))?1:0));\nconst urls = all_stations.map(\n    station=>`<li><a href=\"${station.url}\">${station.name}</a></li>`\n);\n\nmsg.payload = `<ul>${urls.join(\"\\n\")}</ul>`;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 580,
        "wires": [
            [
                "bc7fea83.ffc808",
                "51fb605941148f78"
            ]
        ]
    },
    {
        "id": "fd18f887.ed63b",
        "type": "inject",
        "z": "c129b430.c7968",
        "name": "At startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "6c6238ff.13c1a8",
                "719b7075.932f78",
                "22c3301c5a88be02"
            ]
        ]
    },
    {
        "id": "6c6238ff.13c1a8",
        "type": "change",
        "z": "c129b430.c7968",
        "name": "Store records of 2011 peaks",
        "rules": [
            {
                "t": "set",
                "p": "peaks2011",
                "pt": "global",
                "to": "{\"Bremer R at Ipswich\":19.4,\"Brisbane R at Lowood Pump Stn\":22.87,\"Brisbane R at Mt Crosby\":26.18,\"Brisbane R at Moggill-1\":17.87,\"Brisbane R at Boat Ramp Park\":12.9,\"Brisbane R at City Gauge\":4.47}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "cc677b82.4d5358",
        "type": "ui_chart",
        "z": "c129b430.c7968",
        "name": "Graph River Levels (m)",
        "group": "58fc5d9.2ea9c24",
        "order": 7,
        "width": "8",
        "height": "5",
        "label": "River Levels (m)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 940,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "296b948.16facec",
        "type": "ui_chart",
        "z": "c129b430.c7968",
        "name": "Graph Percent of 2011 level",
        "group": "58fc5d9.2ea9c24",
        "order": 6,
        "width": "8",
        "height": "5",
        "label": "Percent of 2011 level",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 960,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "c3646fb6.f2505",
        "type": "change",
        "z": "c129b430.c7968",
        "name": "get level",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.level",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 320,
        "wires": [
            [
                "cc677b82.4d5358"
            ]
        ]
    },
    {
        "id": "b7867efe.29ccc8",
        "type": "function",
        "z": "c129b430.c7968",
        "name": "Compare level to 2011 records",
        "func": "const peaks2011 = global.get('peaks2011');\nconst station = msg.payload.name;\nif (!peaks2011[station]) return null;\n\nmsg.payload = Number(100 * Number(msg.payload.level) / peaks2011[station]).toFixed(1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 380,
        "wires": [
            [
                "296b948.16facec"
            ]
        ]
    },
    {
        "id": "e2901e01.9e733",
        "type": "switch",
        "z": "c129b430.c7968",
        "name": "Skip wivenhoe levels",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Wivenhoe",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 340,
        "y": 320,
        "wires": [
            [],
            [
                "c3646fb6.f2505"
            ]
        ]
    },
    {
        "id": "9a357d18.2a0db8",
        "type": "inject",
        "z": "c129b430.c7968",
        "name": "Manual Refresh",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "force",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "4fe7efc0.89df7"
            ]
        ]
    },
    {
        "id": "d3cfaefe.6105",
        "type": "ui_text",
        "z": "c129b430.c7968",
        "group": "58fc5d9.2ea9c24",
        "order": 2,
        "width": "6",
        "height": "3",
        "name": "text1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 290,
        "y": 640,
        "wires": []
    },
    {
        "id": "4386db67.bfd304",
        "type": "inject",
        "z": "c129b430.c7968",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "This is a temporary service from Accelerando.com.au.   We build IoT solutions, fast.  Got a suggestion?  Send to @unixbigot@aus.social on mastodon, or email contact@accelerando.com.au",
        "payloadType": "str",
        "x": 130,
        "y": 640,
        "wires": [
            [
                "d3cfaefe.6105"
            ]
        ]
    },
    {
        "id": "6d649a2c.c09654",
        "type": "ui_text",
        "z": "c129b430.c7968",
        "group": "58fc5d9.2ea9c24",
        "order": 3,
        "width": "6",
        "height": "3",
        "name": "text2",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 290,
        "y": 700,
        "wires": []
    },
    {
        "id": "feddb080.2e7238",
        "type": "inject",
        "z": "c129b430.c7968",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Records from BoM are updated every 5 minutes, but not all meters update that often.",
        "payloadType": "str",
        "x": 130,
        "y": 700,
        "wires": [
            [
                "6d649a2c.c09654"
            ]
        ]
    },
    {
        "id": "c1ed1abc.757788",
        "type": "function",
        "z": "c129b430.c7968",
        "name": "Compare to normal level",
        "func": "const normal_levels = global.get('normal_levels');\nconst station = msg.payload.name;\nconst level = Number(msg.payload.level);\nif (!normal_levels[station]) return null;\nconst normal = Number(normal_levels[station]);\n//node.warn(`Normal level at ${station} is ${normal}, current is ${level}`);\nmsg.payload = Number( level - normal).toFixed(1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 480,
        "wires": [
            [
                "de6f5665.8b9a3"
            ]
        ]
    },
    {
        "id": "719b7075.932f78",
        "type": "change",
        "z": "c129b430.c7968",
        "name": "Store records of normal_levels",
        "rules": [
            {
                "t": "set",
                "p": "normal_levels",
                "pt": "global",
                "to": "{\"Brisbane R at Devon Hills\":0,\"Brisbane R at Gregor Ck-1\":0,\"Brisbane R at Gregor Ck-2\":0,\"Brisbane R at Gregor Ck *\":0,\"Brisbane R at Wivenhoe Dam HW\":65.8,\"Brisbane R at Wivenhoe Dam\":65.8,\"Brisbane R at Wivenhoe Dam TW\":27,\"Brisbane R at Lowood Pump Stn\":1,\"Brisbane R at Lowood\":1,\"Brisbane R at Burtons Br\":0.5,\"Brisbane R at Kholo Br\":0.5,\"Brisbane R at Mt Crosby\":7,\"Brisbane R at Colleges Crossing\":0,\"Brisbane R at Moggill-1\":1,\"Brisbane R at Moggill-2\":1,\"Brisbane R at Aitchenson St East\":0.5,\"Brisbane R at Goodna\":0.8,\"Brisbane R at Boat Ramp Park\":0.5,\"Brisbane R at St Lucia\":0.1,\"Brisbane R at Port Office\":0.1,\"Brisbane R at City Gauge\":0.1,\"Bremer R at Lower Mt Walker\":1,\"Bremer R at Rosewood\":1,\"Bremer R at Seven Mile Br\":30,\"Bremer R at Walloon *\":1.8,\"Bremer R at Walloon\":1.8,\"Bremer R at Three Mile Br\":10.2,\"Bremer R at Berrys Lagoon\":7.5,\"Bremer R at One Mile Br\":4.5,\"Bremer R at Hancocks Br Brassall\":1,\"Bremer R at Ipswich\":1,\"Bremer R at Karalee\":0,\"Oxley Ck at New Beith Rd Greenbank\":1,\"Oxley Ck at New Beith Rd Greenbank*\":1.5,\"Oxley Ck at Goodna Rd\":36.2,\"Oxley Ck at Johnson Road\":18.4,\"Oxley Ck at Beatty Rd Archerfield\":1.5,\"Oxley Ck at Corinda High\":0.25,\"Moggill Ck at Fortrose St Kenmore\":4,\"Moggill Ck at Upper Brookfield *\":0.6,\"Breakfast Ck at Bowen Hills Rail\":0.1,\"Bremer R at Berrys Lagoon - B\":7.5,\"Oxley Ck at Ipwsich Rd*\":0,\"Brisbane R at Linville *\":1,\"Brisbane R at Wivenhoe Dam HW *\":0,\"Brisbane R at Wivenhoe Dam TW *\":0,\"Brisbane R at Savages Crossing *\":1.5,\"Brisbane R at Mt Crosby *\":0,\"Bremer R at Spressers Br\":2,\"Bremer R at Berrys Lagoon *\":0,\"Bremer R at Five Mile Br\":2,\"Brisbane R at Savages Crossing\":0,\"Brisbane R at Jindalee Br\":0.1}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "de6f5665.8b9a3",
        "type": "ui_chart",
        "z": "c129b430.c7968",
        "name": "Above normal",
        "group": "58fc5d9.2ea9c24",
        "order": 5,
        "width": "8",
        "height": "5",
        "label": "Height above normal level",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 920,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "7465723d.10a4bc",
        "type": "debug",
        "z": "c129b430.c7968",
        "name": "data file",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 220,
        "wires": []
    },
    {
        "id": "69f9f70d.205c18",
        "type": "debug",
        "z": "c129b430.c7968",
        "name": "level record",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 260,
        "wires": []
    },
    {
        "id": "51fb605941148f78",
        "type": "debug",
        "z": "c129b430.c7968",
        "name": "links",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 620,
        "wires": []
    },
    {
        "id": "22c3301c5a88be02",
        "type": "change",
        "z": "c129b430.c7968",
        "name": "Store records of 2022 peaks",
        "rules": [
            {
                "t": "set",
                "p": "peaks2022",
                "pt": "global",
                "to": "{\"Bremer R at Ipswich\":16.72,\"Brisbane R at City Gauge\":3.85,\"Brisbane R at Port Office\":3.96}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "802d82ad1035451d",
        "type": "ui_chart",
        "z": "c129b430.c7968",
        "name": "Graph Percent of 2022 level",
        "group": "58fc5d9.2ea9c24",
        "order": 6,
        "width": "8",
        "height": "5",
        "label": "Percent of 2022 level",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 960,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "ce0652a82873b683",
        "type": "function",
        "z": "c129b430.c7968",
        "name": "Compare level to 2022 records",
        "func": "const peaks2022 = global.get('peaks2022');\nconst station = msg.payload.name;\nif (!peaks2022[station]) return null;\n\nmsg.payload = Number(100 * Number(msg.payload.level) / peaks2022[station]).toFixed(1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 420,
        "wires": [
            [
                "802d82ad1035451d"
            ]
        ]
    },
    {
        "id": "9b12c271.d828c",
        "type": "mqtt in",
        "z": "a0d7fd3d.3ff608",
        "name": "oozor events",
        "topic": "oozor/devices/+/app/injector/status/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "57ed384c.436b8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 80,
        "wires": [
            [
                "8f167d27.ddc21",
                "e2b30ea8.b9ea18",
                "e850f6d4.c0cd58"
            ]
        ]
    },
    {
        "id": "8f167d27.ddc21",
        "type": "switch",
        "z": "a0d7fd3d.3ff608",
        "name": "switch on topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "status/setpoint",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "status/power",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "status/temperature",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "status/heaters",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 360,
        "y": 200,
        "wires": [
            [
                "16725125.1d130f"
            ],
            [
                "24162378.4c6784"
            ],
            [
                "37a01534.136bc2"
            ],
            [
                "c67a5faa.7429c"
            ]
        ]
    },
    {
        "id": "d27e6bd5.82c18",
        "type": "ui_gauge",
        "z": "a0d7fd3d.3ff608",
        "name": "",
        "group": "5a504658.96b09",
        "order": 1,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "setpoint",
        "label": "C",
        "format": "{{value}}",
        "min": 0,
        "max": "300",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 800,
        "y": 180,
        "wires": []
    },
    {
        "id": "dd7e9672.556678",
        "type": "ui_chart",
        "z": "a0d7fd3d.3ff608",
        "name": "",
        "group": "9186c6e2.b2d59",
        "order": 4,
        "width": "12",
        "height": "6",
        "label": "PID Behaviour",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "300",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 820,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "412b1ca7.4b1b94",
        "type": "ui_gauge",
        "z": "a0d7fd3d.3ff608",
        "name": "",
        "group": "5a504658.96b09",
        "order": 3,
        "width": "5",
        "height": "4",
        "gtype": "gage",
        "title": "power",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 790,
        "y": 260,
        "wires": []
    },
    {
        "id": "90723f42.d068f",
        "type": "ui_gauge",
        "z": "a0d7fd3d.3ff608",
        "name": "",
        "group": "5a504658.96b09",
        "order": 2,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "temperature",
        "label": "C",
        "format": "{{value}}",
        "min": 0,
        "max": "300",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 810,
        "y": 300,
        "wires": []
    },
    {
        "id": "e2b30ea8.b9ea18",
        "type": "debug",
        "z": "a0d7fd3d.3ff608",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 340,
        "y": 260,
        "wires": []
    },
    {
        "id": "eaa30688.9f87d8",
        "type": "ui_led",
        "z": "a0d7fd3d.3ff608",
        "order": 5,
        "group": "5a504658.96b09",
        "width": "1",
        "height": "1",
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#0000ff",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 640,
        "y": 360,
        "wires": []
    },
    {
        "id": "c67a5faa.7429c",
        "type": "json",
        "z": "a0d7fd3d.3ff608",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 360,
        "y": 380,
        "wires": [
            [
                "bd8a9979.9abe28"
            ]
        ]
    },
    {
        "id": "bd8a9979.9abe28",
        "type": "function",
        "z": "a0d7fd3d.3ff608",
        "name": "explode",
        "func": "\nreturn msg.payload.map(v=>({payload:v}));",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": [
            [
                "eaa30688.9f87d8"
            ],
            [
                "6c0f71.96a3c89"
            ],
            [
                "45352347.c9f114"
            ],
            [
                "6b3591c.ea29af"
            ]
        ]
    },
    {
        "id": "6c0f71.96a3c89",
        "type": "ui_led",
        "z": "a0d7fd3d.3ff608",
        "order": 5,
        "group": "5a504658.96b09",
        "width": "1",
        "height": "1",
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#0000ff",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 640,
        "y": 400,
        "wires": []
    },
    {
        "id": "45352347.c9f114",
        "type": "ui_led",
        "z": "a0d7fd3d.3ff608",
        "order": 5,
        "group": "5a504658.96b09",
        "width": "1",
        "height": "1",
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#0000ff",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 640,
        "y": 440,
        "wires": []
    },
    {
        "id": "6b3591c.ea29af",
        "type": "ui_led",
        "z": "a0d7fd3d.3ff608",
        "order": 5,
        "group": "5a504658.96b09",
        "width": "1",
        "height": "1",
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#0000ff",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 640,
        "y": 480,
        "wires": []
    },
    {
        "id": "cbbc1660.b2b318",
        "type": "ui_template",
        "z": "a0d7fd3d.3ff608",
        "group": "9186c6e2.b2d59",
        "name": "Message history",
        "order": 8,
        "width": "12",
        "height": "6",
        "format": "<div style=\"font-size:xx-small;\" ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 800,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e850f6d4.c0cd58",
        "type": "change",
        "z": "a0d7fd3d.3ff608",
        "name": "ts",
        "rules": [
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "$moment().utcOffset(600).format()",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 80,
        "wires": [
            [
                "1b39c6a6.dc14f1"
            ]
        ]
    },
    {
        "id": "1b39c6a6.dc14f1",
        "type": "function",
        "z": "a0d7fd3d.3ff608",
        "name": "parse topic",
        "func": "// topic will be appname/devices/device/event/rest\nlet [app,_,device,event] = msg.topic.split('/');\nmsg.app = app;\nmsg.event = event;\nwhile (msg.event.length<11) msg.event+=' ';\nmsg.device = device;\nmsg.topic = msg.topic.replace(/^([^\\/]+\\/){3}/,'');\nif (msg.payload.startsWith('{')) {\n    msg.payload = JSON.stringify(JSON.parse(msg.payload), null, '    ');\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 80,
        "wires": [
            [
                "da9aa518.6144c8"
            ]
        ]
    },
    {
        "id": "da9aa518.6144c8",
        "type": "function",
        "z": "a0d7fd3d.3ff608",
        "name": "format history",
        "func": "let history = flow.get('mqtt_history')||[]\nlet timestamp = msg.timestamp.replace(/\\+.+$/,'');\n\nhistory.unshift(`${timestamp} ${msg.topic} ${msg.payload}`);\nwhile (history.length > 1000) history.pop();\nflow.set('mqtt_history',history);\n\nmsg.payload = `<pre>${history.join(\"\\n\")}</pre>`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 80,
        "wires": [
            [
                "cbbc1660.b2b318"
            ]
        ]
    },
    {
        "id": "16725125.1d130f",
        "type": "change",
        "z": "a0d7fd3d.3ff608",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "setpoint",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 180,
        "wires": [
            [
                "d27e6bd5.82c18",
                "dd7e9672.556678"
            ]
        ]
    },
    {
        "id": "24162378.4c6784",
        "type": "change",
        "z": "a0d7fd3d.3ff608",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "power",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 220,
        "wires": [
            [
                "412b1ca7.4b1b94",
                "dd7e9672.556678"
            ]
        ]
    },
    {
        "id": "37a01534.136bc2",
        "type": "change",
        "z": "a0d7fd3d.3ff608",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "temperature",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 260,
        "wires": [
            [
                "90723f42.d068f",
                "dd7e9672.556678"
            ]
        ]
    },
    {
        "id": "fd423b12.16ee5",
        "type": "inject",
        "z": "a0d7fd3d.3ff608",
        "name": "clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 610,
        "y": 300,
        "wires": [
            [
                "dd7e9672.556678"
            ]
        ]
    },
    {
        "id": "9659af1d.501c3",
        "type": "mqtt in",
        "z": "7646852d.9dfc04",
        "name": "geoq events",
        "topic": "geoq/event-from/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "57ed384c.436b8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 100,
        "wires": [
            [
                "ff61b488.22302",
                "890ffec3.cff948"
            ]
        ]
    },
    {
        "id": "c748d8ca.1ba8f",
        "type": "function",
        "z": "7646852d.9dfc04",
        "name": "topic=unit pl=reading",
        "func": "if (msg.payload.uni) {\n    msg.unit = msg.payload.uni;\n    msg.topic = `unit-${msg.payload.uni}`;\n    msg.payload = msg.payload.sna;\n}\nelse {\n    node.warn(`Did not match unit number in topic [${msg.topic}]`)\n    return null;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 100,
        "wires": [
            [
                "64bbf5e.3e1ec0c",
                "c1eeafeb.81a5d8",
                "42ee9b16.34cfdc"
            ]
        ]
    },
    {
        "id": "64bbf5e.3e1ec0c",
        "type": "switch",
        "z": "7646852d.9dfc04",
        "name": "",
        "property": "unit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 750,
        "y": 100,
        "wires": [
            [],
            [
                "b99e7446.6fd1a"
            ],
            [
                "ec7cc8e9.aaa958"
            ],
            [
                "beab5ab1.64b8c8"
            ]
        ]
    },
    {
        "id": "b99e7446.6fd1a",
        "type": "ui_gauge",
        "z": "7646852d.9dfc04",
        "name": "Unit 2",
        "group": "905ccc9.70da6b",
        "order": 2,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "Unit 2",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 940,
        "y": 120,
        "wires": []
    },
    {
        "id": "ec7cc8e9.aaa958",
        "type": "ui_gauge",
        "z": "7646852d.9dfc04",
        "name": "Unit 3",
        "group": "905ccc9.70da6b",
        "order": 3,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "Unit 3",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 940,
        "y": 160,
        "wires": []
    },
    {
        "id": "beab5ab1.64b8c8",
        "type": "ui_gauge",
        "z": "7646852d.9dfc04",
        "name": "Unit 4",
        "group": "905ccc9.70da6b",
        "order": 4,
        "width": "3",
        "height": "2",
        "gtype": "gage",
        "title": "Unit 4",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 940,
        "y": 200,
        "wires": []
    },
    {
        "id": "c1eeafeb.81a5d8",
        "type": "ui_chart",
        "z": "7646852d.9dfc04",
        "name": "readings",
        "group": "905ccc9.70da6b",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 770,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ff61b488.22302",
        "type": "debug",
        "z": "7646852d.9dfc04",
        "name": "Event received",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 40,
        "wires": []
    },
    {
        "id": "890ffec3.cff948",
        "type": "json",
        "z": "7646852d.9dfc04",
        "name": "decode",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 340,
        "y": 100,
        "wires": [
            [
                "c748d8ca.1ba8f",
                "60ddb4ae.3d301c"
            ]
        ]
    },
    {
        "id": "42ee9b16.34cfdc",
        "type": "debug",
        "z": "7646852d.9dfc04",
        "name": "parsed event",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 160,
        "wires": []
    },
    {
        "id": "ca7d025.9eb6b8",
        "type": "ui_template",
        "z": "7646852d.9dfc04",
        "group": "905ccc9.70da6b",
        "name": "Sensor history",
        "order": 4,
        "width": "6",
        "height": "6",
        "format": "<div style=\"font-size:xx-small;\" ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 900,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "9fe0f3b3.d9dcf8",
        "type": "function",
        "z": "7646852d.9dfc04",
        "name": "message history",
        "func": "let history = global.get('mqtt_history')||[]\n\nlet timestamp = msg.timestamp.replace(/\\+.+$/,'');\n\nhistory.unshift(`${timestamp} ${msg.topic}\\n\\t${JSON.stringify(msg.payload,null,'   ')}`);\nwhile (history.length > 1000) history.pop();\nglobal.set('mqtt_history',history);\n\nmsg.payload = `<pre>${history.join(\"\\n\")}</pre>`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 380,
        "wires": [
            [
                "ca7d025.9eb6b8"
            ]
        ]
    },
    {
        "id": "60ddb4ae.3d301c",
        "type": "change",
        "z": "7646852d.9dfc04",
        "name": "add timestamp",
        "rules": [
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "payload.tim",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 280,
        "wires": [
            [
                "9fe0f3b3.d9dcf8"
            ]
        ]
    },
    {
        "id": "d3eeea98.5b486",
        "type": "debug",
        "z": "38f33b52.8436a4",
        "name": "Mention",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "x": 400,
        "y": 120,
        "wires": []
    },
    {
        "id": "816f6759.f03ea8",
        "type": "switch",
        "z": "38f33b52.8436a4",
        "name": "Switch on command",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": ".*@accelerando_bot go ([a-z ]+).*",
                "vt": "str",
                "case": true
            },
            {
                "t": "regex",
                "v": ".*@accelerando_bot do ([a-z ]+).*",
                "vt": "str",
                "case": true
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 160,
        "y": 180,
        "wires": [
            [
                "b04e428c.19073"
            ],
            [
                "14a8db2b.3b3305"
            ],
            [
                "60a95d85.9530ac"
            ]
        ]
    },
    {
        "id": "60a95d85.9530ac",
        "type": "debug",
        "z": "38f33b52.8436a4",
        "name": "Unhandled command",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "x": 450,
        "y": 180,
        "wires": []
    },
    {
        "id": "4d02e694.cd9258",
        "type": "debug",
        "z": "38f33b52.8436a4",
        "name": "Complete Tweet",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "x": 430,
        "y": 80,
        "wires": []
    },
    {
        "id": "2064d35f.cff68c",
        "type": "inject",
        "z": "38f33b52.8436a4",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "070c0a",
        "payloadType": "str",
        "x": 530,
        "y": 340,
        "wires": [
            [
                "a35d9ae1.b367f8"
            ]
        ]
    },
    {
        "id": "26058e52.5bd7b2",
        "type": "color-convert",
        "z": "38f33b52.8436a4",
        "input": "css",
        "output": "rgb",
        "outputType": "string",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "77233f6d.ac26a"
            ]
        ]
    },
    {
        "id": "a35d9ae1.b367f8",
        "type": "mqtt out",
        "z": "38f33b52.8436a4",
        "name": "",
        "topic": "devices/chaser/star/set/color",
        "qos": "",
        "retain": "true",
        "broker": "1187b40c.0e4a54",
        "x": 760,
        "y": 380,
        "wires": []
    },
    {
        "id": "b04e428c.19073",
        "type": "function",
        "z": "38f33b52.8436a4",
        "name": "CMD: go [color]",
        "func": "msg.payload = msg.payload.match(/go ([A-Za-z]+)/)[1]\n//msg.payload=msg.payload.replace(/ /,’’)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 380,
        "wires": [
            [
                "26058e52.5bd7b2"
            ]
        ]
    },
    {
        "id": "14a8db2b.3b3305",
        "type": "function",
        "z": "38f33b52.8436a4",
        "name": "CMD: do [pattern]",
        "func": "msg.payload = msg.payload.match(/go (.*)/)[1]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 540,
        "wires": [
            [
                "759f782c.79be68",
                "3916da87.35273e"
            ]
        ]
    },
    {
        "id": "759f782c.79be68",
        "type": "mqtt out",
        "z": "38f33b52.8436a4",
        "name": "",
        "topic": "devices/chaser/star/set/pattern",
        "qos": "",
        "retain": "true",
        "broker": "1187b40c.0e4a54",
        "x": 450,
        "y": 540,
        "wires": []
    },
    {
        "id": "3916da87.35273e",
        "type": "debug",
        "z": "38f33b52.8436a4",
        "name": "Pattern",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "x": 380,
        "y": 600,
        "wires": []
    },
    {
        "id": "d89581f6.c197e",
        "type": "inject",
        "z": "38f33b52.8436a4",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "purple",
        "payloadType": "str",
        "x": 190,
        "y": 300,
        "wires": [
            [
                "26058e52.5bd7b2"
            ]
        ]
    },
    {
        "id": "77233f6d.ac26a",
        "type": "function",
        "z": "38f33b52.8436a4",
        "name": "Make hex",
        "func": "node.warn(msg.payload)\nlet hexes = msg.payload.map(k=>{\n    let h = k.toString(16);\n    if (h.length < 2) h='0'+h;\n    return h\n})\nnode.warn(hexes)\nmsg.payload = hexes.join('')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 380,
        "wires": [
            [
                "a35d9ae1.b367f8",
                "e997ae70.4fb3f"
            ]
        ]
    },
    {
        "id": "4d655ab8.374b9c",
        "type": "inject",
        "z": "38f33b52.8436a4",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "goldenrod",
        "payloadType": "str",
        "x": 180,
        "y": 340,
        "wires": [
            [
                "26058e52.5bd7b2"
            ]
        ]
    },
    {
        "id": "e997ae70.4fb3f",
        "type": "debug",
        "z": "38f33b52.8436a4",
        "name": "Color",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "x": 700,
        "y": 440,
        "wires": []
    },
    {
        "id": "5bbd0e03.4489f",
        "type": "twitter in",
        "z": "38f33b52.8436a4",
        "d": true,
        "twitter": "",
        "tags": "@accelerando_bot",
        "user": "false",
        "name": "Accelerando bot mentions",
        "inputs": 0,
        "x": 150,
        "y": 80,
        "wires": [
            [
                "d3eeea98.5b486",
                "4d02e694.cd9258"
            ]
        ]
    },
    {
        "id": "68cfcc37.7483fc",
        "type": "ui_text",
        "z": "86ec6dae.ef8b88",
        "d": true,
        "group": "58fc5d9.2ea9c24",
        "order": 4,
        "width": "6",
        "height": "3",
        "name": "text2",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 550,
        "y": 180,
        "wires": []
    },
    {
        "id": "91dd7aa4.09b908",
        "type": "inject",
        "z": "86ec6dae.ef8b88",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Contact team (at) accelerando (dot) com (dot) au if you want it to stay around.  It was a temporary experiment but we can help you build your own if you want.",
        "payloadType": "str",
        "x": 390,
        "y": 180,
        "wires": [
            [
                "68cfcc37.7483fc"
            ]
        ]
    },
    {
        "id": "ddd40237.2d34b8",
        "type": "inject",
        "z": "86ec6dae.ef8b88",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Were you using this river level monitoring widget?",
        "payloadType": "str",
        "x": 390,
        "y": 120,
        "wires": [
            [
                "2965217f.9783fe"
            ]
        ]
    },
    {
        "id": "2965217f.9783fe",
        "type": "ui_text",
        "z": "86ec6dae.ef8b88",
        "d": true,
        "group": "58fc5d9.2ea9c24",
        "order": 1,
        "width": "6",
        "height": "3",
        "name": "text1",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 550,
        "y": 120,
        "wires": []
    },
    {
        "id": "e943d6fe745ae209",
        "type": "mqtt in",
        "z": "f64f2bc0a08264f2",
        "name": "cobber events",
        "topic": "devices/scd40-4df8c0/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "57ed384c.436b8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 100,
        "wires": [
            [
                "8923377ab4d8caca",
                "912efb234fec2b6c"
            ]
        ]
    },
    {
        "id": "912efb234fec2b6c",
        "type": "switch",
        "z": "f64f2bc0a08264f2",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "status/temperature",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "status/humidity",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "status/ppm",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "9b1a91a08538f544"
            ],
            [
                "f2c58f214553e002"
            ],
            [
                "01b0af1330b394d3",
                "ba9da6b2874a0fc3"
            ]
        ]
    },
    {
        "id": "8923377ab4d8caca",
        "type": "debug",
        "z": "f64f2bc0a08264f2",
        "name": "rcvd topic",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "$substringAfter(topic,\"status/\") & \" \" & payload",
        "statusType": "jsonata",
        "x": 380,
        "y": 40,
        "wires": []
    },
    {
        "id": "9b1a91a08538f544",
        "type": "ui_chart",
        "z": "f64f2bc0a08264f2",
        "name": "",
        "group": "1eda45e1f9861472",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Temp",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "30",
        "removeOlder": "72",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "f2c58f214553e002",
        "type": "ui_chart",
        "z": "f64f2bc0a08264f2",
        "name": "",
        "group": "1eda45e1f9861472",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Hum",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "30",
        "ymax": "80",
        "removeOlder": "72",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "01b0af1330b394d3",
        "type": "ui_chart",
        "z": "f64f2bc0a08264f2",
        "name": "",
        "group": "48201936fcc78803",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "PPM",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "300",
        "ymax": "",
        "removeOlder": "72",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ba9da6b2874a0fc3",
        "type": "ui_gauge",
        "z": "f64f2bc0a08264f2",
        "name": "",
        "group": "48201936fcc78803",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "CO₂",
        "label": "ppm",
        "format": "{{value}}",
        "min": "300",
        "max": "1500",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 630,
        "y": 240,
        "wires": []
    }
]